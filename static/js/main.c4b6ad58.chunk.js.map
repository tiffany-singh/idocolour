{"version":3,"sources":["components/FullscreenImage.js","components/ImageButton.js","components/BurgerIcon.js","components/Menu.js","components/MenuButton.js","components/NavMenu.js","containers/MusicPlayerOptions.js","containers/Projects.js","containers/Commissions.js","helpers/validate.js","components/Input.js","components/SocialIcon.js","containers/Home.js","containers/Contact.js","components/TextButton.js","containers/App.js","containers/StandardPage.js","containers/EpkPage.js","serviceWorker.js","index.js"],"names":["FullscreenImage","styled","div","_templateObject","Object","taggedTemplateLiteral","props","image","EpkFullscreenImage","_templateObject2","ImageButton","_this$props","this","route","label","imgSrc","react_default","a","createElement","NavLink","to","className","style","backgroundImage","concat","PureComponent","BurgerIcon","_ref","open","objectWithoutProperties","assign","key","Menu","close","items","map","item","title","onClick","contentStyle","background","width","border","MenuButton","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","active","menuList","_this2","reactjs_popup_es","modal","overlayStyle","zIndex","closeOnDocumentClick","lockScroll","trigger","React","Component","NavMenu","MenuButton_MenuButton","options","audioLists","name","singer","cover","window","location","host","musicSrc","Promise","resolve","defaultPlayIndex","theme","bounds","preload","glassBg","remember","remove","defaultPosition","right","top","playModeText","order","orderLoop","singleLoop","shufflePlay","openText","closeText","checkedText","unCheckedText","notContentText","panelTitle","defaultPlayMode","mode","once","autoPlay","toggleMode","showMiniModeCover","showMiniProcessBar","drag","seeked","showProgressLoadBar","showPlay","showReload","showDownload","showPlayMode","showThemeSwitch","showLyric","extendsContent","defaultVolume","playModeShowTime","loadAudioErrorPlayNext","onAudioDownload","audioInfo","console","log","onAudioPlay","onAudioPause","onAudioSeeked","onAudioVolumeChange","currentVolume","onAudioEnded","onAudioAbort","e","onAudioProgress","onAudioReload","onAudioLoadError","onThemeChange","onAudioListsChange","currentPlayId","onAudioPlayTrackChange","onPlayModeChange","playMode","onModeChange","IS_MOBILE","onAudioListsPanelChange","panelVisible","onAudioListsDragEnd","fromIndex","endIndex","onAudioLyricChange","lineNum","currentLyric","minLengthValidator","value","minLength","length","requiredValidator","trim","emailValidator","test","String","toLowerCase","validate","rules","isValid","rule","Input","customCss","touched","valid","size","SocialIcon","href","Home","_Component","_getPrototypeOf2","_classCallCheck","_len","arguments","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","apply","params","_inherits","_createClass","data","require","App","Switch","Route","exact","path","component","menu","Boolean","hostname","match","ReactDOM","render","BrowserRouter","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4b6ad58.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const FullscreenImage = styled.div`\n    background: url(${props => props.image});\n    height: 100vh;\n    width: 100vw;\n    max-width: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n`;\n\n\nexport const EpkFullscreenImage = styled.div`\n    background: url(${props => props.image});\n    height: 100vh;\n    width: 100vw;\n    max-width: 100%;\n    max-height: 100%;\n    background-position: center;\n    background-size: cover;\n`;","import React, {PureComponent} from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass ImageButton extends PureComponent {\n    render() {\n        const {route, label, imgSrc} = this.props; \n        return ( \n            <NavLink to = {route} className=\"group md:w-2/5 hover:opacity-50 no-underline m-12\">\n                <div \n                style={{ backgroundImage: `url(${imgSrc})`}} \n                className=\"\n                bg-cover\n                bg-center\n                h-64\n                w-auto\n                text-white\n                hover:text-black\n                \" \n                >\n                    <div className = \"flex-wrap pt-4 pl-4\" >\n                        <p className=\"tracking-wide text-4xl uppercase font-sans font-thin\">\n                            {label}\n                        </p>\n                    </div> \n                </div>\n            </NavLink>\n        );\n    }\n}\n\nexport default ImageButton","import React from \"react\";\n\nexport default ({ open, ...props }) => (\n  <div className={open ? \"burger-menu open\" : \"burger-menu\"} {...props}>\n    <div className=\"bar1\" key=\"b1\" />\n    <div className=\"bar2\" key=\"b2\" />\n    <div className=\"bar3\" key=\"b3\" />\n  </div>\n);","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default ({ close, items }) => (\n  <div className=\"menu\">\n    <ul>\n      {items.map(item => (\n        <li key={item.title + item.route}>\n          <NavLink onClick={close} className=\"font-sans text-3xl no-underline uppercase font-thin text-white hover:text-black\" to={item.route}>\n            {item.title}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","import React from 'react';\nimport Popup from \"reactjs-popup\";\nimport BurgerIcon from \"./BurgerIcon\";\nimport Menu from \"./Menu\";\n\nconst contentStyle = {\n  background: \"rgba(255,255,255,0)\",\n  width: \"80%\",\n  border: \"none\"\n};\n\nexport default class MenuButton extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { active: false };\n    this.menuList = props.menuList;\n  }\n\n  render() {\n    return (\n      <Popup\n      modal\n      overlayStyle={{ background: \"rgba(10,0,0,0.7\", zIndex:1 }}\n      contentStyle={contentStyle}\n      closeOnDocumentClick={false}\n      lockScroll={true}\n      trigger={open => <BurgerIcon open={open} />}\n      >\n        {close => <Menu close={close} items={this.menuList} />}\n      </Popup>\n    );\n  }\n}","import React from \"react\";\nimport MenuButton from '../components/MenuButton';\n\nexport default (props) => (\n  // <div className=\"fixed pin-r mr-10 mt-6 outline-none\">\n  <div>\n    <MenuButton menuList={props.menuList}/>\n    {/* <ReactJkMusicPlayer {...props.musicParams}/> */}\n  </div>\n);","const options = {\n  //audio lists model\n  audioLists: [\n    {\n      name: \"Pluxt 6712\",\n      singer: \"Steven Hue\",\n      cover: \"//\" + window.location.host + \"/images/dale.jpg\",\n      //musicSrc: \"//music/Pluxt_6712.mp3\"\n      musicSrc: () => {\n        return Promise.resolve(\"//\" + window.location.host + \"/music/Pluxt_6712.mp3\")\n      },\n    },\n    {\n      name: \"SMPL-CRT_04.5_DOSSERTRASS_02\",\n      singer: \"Steven Hue\",\n      cover: \"//\" + window.location.host + \"/images/dale.jpg\",\n      //musicSrc: \"//music/Pluxt_6712.mp3\"\n      musicSrc: () => {\n        return Promise.resolve(\"//\" + window.location.host + \"/music/SMPL-CRT_04.5_DOSSERTRASS_02.mp3\")\n      },\n    }\n  ],\n\n  //default play index of the audio player  [type `number` default `0`]\n  defaultPlayIndex: 0,\n\n  //if you want dynamic change current play audio you can change it [type `number` default `0`]\n  // playIndex: 0,\n\n  //color of the music player theme    [ type `string: 'light' or 'dark'  ` default 'dark' ]\n  theme: \"dark\",\n\n  // Specifies movement boundaries. Accepted values:\n  // - `parent` restricts movement within the node's offsetParent\n  //    (nearest node with position relative or absolute), or\n  // - a selector, restricts movement within the targeted node\n  // - An object with `left, top, right, and bottom` properties.\n  //   These indicate how far in each direction the draggable\n  //   can be moved.\n  bounds: \"body\",\n\n  //Whether to load audio immediately after the page loads.  [type `Boolean | String`, default `false`]\n  //\"auto|metadata|none\" \"true| false\"\n  preload: true,\n\n  //Whether the player's background displays frosted glass effect  [type `Boolean`, default `false`]\n  glassBg: false,\n\n  //The next time you access the player, do you keep the last state  [type `Boolean` default `false`]\n  remember: false,\n\n  //The Audio Can be deleted  [type `Boolean`, default `true`]\n  remove: false,\n\n  //audio controller initial position    [ type `Object` default '{top:0,left:0}' ]\n  defaultPosition: {\n    // top: 300,\n    // left: 120\n    right: 0,\n    top: 90,\n  },\n\n  // play mode text config of the audio player\n  playModeText: {\n    order: \"In Order\",\n    orderLoop: \"List Loop\",\n    singleLoop: \"Track Loop\",\n    shufflePlay: \"Shuffle\"\n  },\n\n  //audio controller open text  [ type `String | ReactNode` default 'open']\n  openText: \"Open\",\n\n  //audio controller close text  [ type `String | ReactNode` default 'close']\n  closeText: \"Close\",\n\n  //audio theme switch checkedText  [ type `String | ReactNode` default '-']\n  checkedText: \"Checked\",\n\n  //audio theme switch unCheckedText [ type `String | ReactNode` default '-']\n  unCheckedText: \"Unchecked\",\n\n  // audio list panel show text of the playlist has no songs [ type `String` | ReactNode  default 'no music']\n  notContentText: \"No Content\",\n\n  panelTitle: \"Panel\",\n\n  defaultPlayMode: \"order\",\n\n  //audio mode        mini | full          [type `String`  default `mini`]\n  mode: \"mini\",\n\n  /**\n   * [ type `Boolean` default 'false' ]\n   * The default audioPlay handle function will be played again after each pause, If you only want to trigger it once, you can set 'true'\n   */\n  once: false,\n\n  //Whether the audio is played after loading is completed. [type `Boolean` default 'true']\n  autoPlay: false,\n\n  //Whether you can switch between two modes, full => mini  or mini => full   [type 'Boolean' default 'true']\n  toggleMode: true,\n\n  //audio cover is show of the \"mini\" mode [type `Boolean` default 'true']\n  showMiniModeCover: false,\n\n  //audio playing progress is show of the \"mini\"  mode\n  showMiniProcessBar: false,\n\n  //audio controller is can be drag of the \"mini\" mode     [type `Boolean` default `true`]\n  drag: true,\n\n  //drag the audio progress bar [type `Boolean` default `true`]\n  seeked: true,\n\n  //audio controller title [type `String | ReactNode`  default <FaHeadphones/>]\n  //controllerTitle: \"Title\",\n\n  //Displays the audio load progress bar.  [type `Boolean` default `true`]\n  showProgressLoadBar: true,\n\n  //play button display of the audio player panel   [type `Boolean` default `true`]\n  showPlay: true,\n\n  //reload button display of the audio player panel   [type `Boolean` default `true`]\n  showReload: true,\n\n  //download button display of the audio player panel   [type `Boolean` default `true`]\n  showDownload: false,\n\n  //loop button display of the audio player panel   [type `Boolean` default `true`]\n  showPlayMode: true,\n\n  //theme toggle switch  display of the audio player panel   [type `Boolean` default `true`]\n  showThemeSwitch: false,\n\n  //lyric display of the audio player panel   [type `Boolean` default `false`]\n  showLyric: false,\n\n  //Extensible custom content       [type 'Array' default '[]' ]\n  extendsContent: [],\n\n  //default volume of the audio player [type `Number` default `100` range `0-100`]\n  defaultVolume: 100,\n\n  //playModeText show time [type `Number(ms)` default `700`]\n  playModeShowTime: 600,\n\n  //Whether to try playing the next audio when the current audio playback fails [type `Boolean` default `true`]\n  loadAudioErrorPlayNext: true,\n\n  //Music is downloaded handle\n  onAudioDownload(audioInfo) {\n    //swal(\"download successfully\", \"\", \"success\");\n    console.log(\"audio download\", audioInfo);\n  },\n\n  //audio play handle\n  onAudioPlay(audioInfo) {\n    console.log(\"audio playing\", audioInfo);\n  },\n\n  //audio pause handle\n  onAudioPause(audioInfo) {\n    console.log(\"audio pause\", audioInfo);\n  },\n\n  //When the user has moved/jumped to a new location in audio\n  onAudioSeeked(audioInfo) {\n    console.log(\"audio seeked\", audioInfo);\n  },\n\n  //When the volume has changed  min = 0.0  max = 1.0\n  onAudioVolumeChange(currentVolume) {\n    console.log(\"audio volume change\", currentVolume);\n  },\n\n  //The single song is ended handle\n  onAudioEnded(audioInfo) {\n    //swal(\"Audio is ended!\", \"\", \"success\");\n    console.log(\"audio ended\", audioInfo);\n  },\n\n  //audio load abort The target event like {...,audioName:xx,audioSrc:xx,playMode:xx}\n  onAudioAbort(e) {\n    console.log(\"audio abort\", e);\n  },\n\n  //audio play progress handle\n  onAudioProgress(audioInfo) {\n    // console.log('audio progress',audioInfo);\n  },\n\n  //audio reload handle\n  onAudioReload(audioInfo) {\n    console.log(\"audio reload:\", audioInfo);\n  },\n\n  //audio load failed error handle\n  onAudioLoadError(e) {\n    //swal(\"audio load error\", \"\", \"error\");\n    console.log(\"audio load err\", e);\n  },\n\n  //theme change handle\n  onThemeChange(theme) {\n    console.log(\"theme change:\", theme);\n  },\n\n  onAudioListsChange(currentPlayId, audioLists, audioInfo) {\n    console.log(\"[currentPlayId] audio lists change:\", currentPlayId);\n    console.log(\"[audioLists] audio lists change:\", audioLists);\n    console.log(\"[audioInfo] audio lists change:\", audioInfo);\n  },\n\n  onAudioPlayTrackChange(currentPlayId, audioLists, audioInfo) {\n    console.log(\n      \"audio play track change:\",\n      currentPlayId,\n      audioLists,\n      audioInfo\n    );\n  },\n\n  onPlayModeChange(playMode) {\n    console.log(\"play mode change:\", playMode);\n  },\n\n  onModeChange(mode, IS_MOBILE) {\n    console.log(\"mode change:\", mode);\n  },\n\n  onAudioListsPanelChange(panelVisible) {\n    console.log(\"audio lists panel visible:\", panelVisible);\n  },\n\n  onAudioListsDragEnd(fromIndex, endIndex) {\n    console.log(\"audio lists drag end:\", fromIndex, endIndex);\n  },\n\n  onAudioLyricChange(lineNum, currentLyric) {\n    console.log(\"audio lyric change:\", lineNum, currentLyric);\n  }\n};\n\nexport default options;","import React, { Component, Fragment } from 'react';\nimport { FullscreenImage } from '../components/FullscreenImage';\nimport ImageButton from '../components/ImageButton';\nimport NavMenu from '../components/NavMenu';\nimport options from \"../containers/MusicPlayerOptions\";\n\nclass Projects extends Component {\n  state = {\n    params: options\n  };\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n  render() {\n    return (\n      <Fragment>\n        <FullscreenImage image='../images/HueWeb.Projects.Sphere.n.Squares.jpg'>\n        <NavMenu menuList={this.props.menuList} musicParams={options} />\n          <div className=\"ml-5 pt-5 w-1/3 font-sans text-white\">\n            <h1 className=\"flex-wrap mb-5 uppercase tracking-wide font-thin md:text-5xl text-4xl\">\n              Projects\n            </h1>\n            <p className=\"flex-wrap tracking-wide font-hairline md:text-2xl text-sm\">\n              Steven has always been drawn to experimental forms of expression which is evident in his work. \n              <br/><br/>\n              An open-minded creative, genre does not constrain his approach to artistic expression, although he has an affinity for the dark and nuanced.\n            </p>\n          </div>\n        </FullscreenImage>\n        <div>\n          <h1 className=\"text-center font-sans font-thin mt-6\">\n            PROJECTS\n          </h1>\n        </div>\n        <div className=\"bg-white md:flex md:flex-wrap px-4 md:px-20 md:mx-32 md:mb-12 justify-around\">\n          <ImageButton route=\"/projects/assembly\" label=\"Assembly\" imgSrc='images/hue.assembly.web.6x9.jpg' />\n          <ImageButton route=\"/projects/brainstare.manatorquim\" label=\"Brainstare / Manatorquim\" imgSrc='images/brain-manny-button-image-01.16.9.jpg' />\n          <ImageButton route=\"/projects/fullcode\" label=\"Full Code\" imgSrc='images/fullcode_bg.jpg' />\n          <ImageButton route=\"/projects/challengehaus\" label=\"Challenge Haus\" imgSrc='images/ch.jpg' />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component, Fragment } from 'react';\nimport { FullscreenImage } from '../components/FullscreenImage';\nimport ImageButton from '../components/ImageButton';\nimport NavMenu from '../components/NavMenu';\nimport options from \"./MusicPlayerOptions\";\n\nclass Commissions extends Component {\n  state = {\n    params: options\n  }\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n  render() {\n    const { params } = this.state;\n    return (\n      <Fragment>\n        <FullscreenImage image='images/HueWeb.Commissions.Sphere.n.Squares.jpg'>\n        <NavMenu menuList={this.props.menuList} musicParams={options} />\n          <div className=\"ml-5 pt-5 w-1/3 font-sans text-white\">\n            <h1 className=\"flex-wrap mb-5 uppercase tracking-wide font-thin md:text-5xl text-4xl\">\n            COMMISSIONS\n            </h1>\n            <p className=\"flex-wrap tracking-wide font-hairline md:text-2xl text-sm\">\n            Steven Hue has collaborated with a wide variety of professionals, including installation artists, musicians, producers, and filmmakers.\n            <br/><br/>\n            Hue enjoys meticulously working to a brief while adding his own flair.\n            </p>\n          </div>\n        </FullscreenImage>\n        <div>\n          <h1 className=\"text-center font-sans font-thin mt-6\">\n          COMMISSIONS\n          </h1>\n        </div>\n        <div className=\"bg-white md:flex flex-wrap md:mx-32 md:mb-12 md:p-0 p-8 justify-between\">\n          <ImageButton route=\"/commissions/beyondrefuge\" label=\"Journey of a Million Miles\" imgSrc='images/refuge_bg.jpg' />\n          <ImageButton route=\"/commissions/totalinternalreflection\" label=\"Total Internal Reflection\" imgSrc='images/tir.jpg' />\n          <ImageButton route=\"/commissions/untitleddream\" label=\"Untitled Dream\" imgSrc='images/untitled_dream_bg.jpg' />\n          <ImageButton route=\"/commissions/returner\" label=\"Returner O\" imgSrc='images/hue.com-returner.jpg' />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Commissions;\n","const validate = (value, rules) => {\n    let isValid = true;\n    \n    for (let rule in rules) {\n    \n      switch (rule) {\n            case 'minLength': isValid = isValid && minLengthValidator(value, rules[rule]); break;\n          \n          case 'isRequired': isValid = isValid && requiredValidator(value); break;\n              \n          case 'isEmail': isValid = isValid && emailValidator(value); break;\n          \n            default: isValid = true;\n      }\n  \n    }\n    \n    return isValid;\n}\n  \n  \n/**\n * minLength Val\n * @param  value \n * @param  minLength\n * @return          \n */\nconst minLengthValidator = (value, minLength) => {\n    return value.length >= minLength;\n}\n  \n/**\n * Check to confirm that feild is required\n * \n * @param  value \n * @return       \n */\nconst requiredValidator = value => {\n    return value.trim() !== '';\t\n}\n  \n/**\n * Email validation\n * \n * @param value\n * @return \n */\nconst emailValidator = value => {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(value).toLowerCase());\n}\n  \nexport default validate;","import React from 'react';\n\nconst Input = props => {\n\n    let customCss = \"resize-none h-12 w-full bg-transparent text-white text-md\";\n    let formControl = \"form-control\";\n\n    if (props.touched && !props.valid) {\n        formControl = 'form-control control-error';\n    }\n\n    if(props.size===\"lg\")\n    {\n        customCss = \"resize-none flex-grow w-full h-32 bg-transparent text-white text-md\"\n    }\n\n    return (\n        <div className=\"form-group p-2\">\n            <textarea className={formControl, customCss} {...props}/>\n        </div>\n    );\n}\n\nexport default Input;","import React, {PureComponent} from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass SocialIcon extends PureComponent {\n    render() {\n        const {route, imgSrc} = this.props; \n        return ( \n            <a href = {route} className=\"hover:opacity-50 no-underline\">\n                <div \n                style={{ backgroundImage: `url(${imgSrc})`}} \n                className=\"\n                w-12\n                h-12\n                mx-24\n                my-4\n                bg-cover\n                bg-center\n                \" \n                >\n                </div>\n            </a>\n        );\n    }\n}\n\nexport default SocialIcon","import React, { Component } from 'react';\nimport TextButton from '../components/TextButton';\nimport { FullscreenImage } from '../components/FullscreenImage';\nimport NavMenu from '../components/NavMenu';\nimport options from \"../containers/MusicPlayerOptions\";\n\nclass Home extends Component {\n  state = {\n    params: options\n  };\n  render() {\n    const { params } = this.state;\n    return (\n      <FullscreenImage image=\"/images/home.jpg\">\n        {/* <NavMenu menuList={this.props.menuList} musicParams={options} /> */}\n        <div className=\"ml-8 pt-8 w-1/3 font-mono\">\n          <h1 className=\"mb-5 uppercase tracking-wide font-thin md:text-5xl text-4xl text-black\">\n            I Do Colour\n          </h1>\n          <p className=\"tracking-wide font-hairline text-black md:text-2xl text-sm\">\n            A mindful colour consultancy company\n          </p>\n          <br></br>\n          <p className=\"tracking-wide font-hairline text-black md:text-2xl text-sm\">\n            Artist Website: <a href=\"https://www.tiffanysingh.com\">www.tiffanysingh.com</a>\n          </p>\n          <br></br>\n          <p className=\"tracking-wide font-hairline text-black md:text-2xl text-sm\">\n            Contact: info@idocolour.com\n          </p>\n        </div> \n        {/* <div className=\"items-stretch md:w-1/4 w-2/3 md:flex fixed md:pin-r pin-b m-20 justify-center\">\n          <TextButton text='Projects' route='/projects'/>\n          <TextButton text='Commissions' route='/commissions'/>\n        </div> */}\n      </FullscreenImage>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { FullscreenImage } from '../components/FullscreenImage';\nimport options from \"../containers/MusicPlayerOptions\";\nimport validate from \"../helpers/validate\";\nimport Input from \"../components/Input\";\nimport SocialIcon from '../components/SocialIcon';\nimport NavMenu from '../components/NavMenu';\n\nclass Contact extends Component {\n  constructor () {\n    super();\n\n    this.state = {\n\n      emailSent: false,\n\n      bttnStyle: \"m-2 p-4 rounded-lg shadow-lg\",\n      formStyle: \"visible mt-2 mb-24 p-8 sm:w-2/3 md:w-1/2\",\n      musicParams: options,\n      \n      formIsValid: false,\n\n      formControls: {\n        email: {\n          value: '',\n          placeholder: 'YOUR EMAIL ADDRESS',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: true,\n            isEmail: true\n          }\n        },\n        subject: {\n          value: '',\n          placeholder: 'YOUR SUBJECT',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 0,\n            isRequired: false\n          }\n        },\n        body: {\n          value: '',\n          placeholder: 'YOUR MESSAGE',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: true\n          }\n        }\n      }\n    }\n  }\n\n  changeHandler = event => {\n\n    const name = event.target.name;\n    const value = event.target.value;\n    \n    const updatedControls = {\n\t    ...this.state.formControls\n    };\n    const updatedFormElement = {\n\t    ...updatedControls[name]\n    };\n\n    updatedFormElement.value = value;\n    updatedFormElement.touched = true;\n    updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n\n    updatedControls[name] = updatedFormElement;\n\n    let formIsValid = true;\n    for (let inputIdentifier in updatedControls) {\n      formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n    }\n\n    let bttnStyle = formIsValid ? \"m-2 p-4 bg-black text-white rounded-lg shadow-lg\" : \"m-2 p-4 rounded-lg shadow-lg\";\n\n    this.setState({\n      formControls: updatedControls,\n      formIsValid: formIsValid,\n      bttnStyle: bttnStyle\n    });\n  }\n\n  formSubmitHandler = () => {\n    const formData = {};\n    var service_id = \"shuemoney\";\n    const templateId = 'contact_form';\n\n    for (let formElementId in this.state.formControls) {\n      formData[formElementId] = this.state.formControls[formElementId].value;\n    }\n\n    console.dir(formData);\n  \n    this.sendFeedback(service_id, templateId, { message: this.state.formControls.body.value, user_name: this.state.formControls.subject.value, user_email: this.state.formControls.email.value})\n  }\n\n  sendFeedback (service_id, templateId, variables) {\n    window.emailjs.send(\n      service_id, templateId,\n      variables\n      ).then(res => {\n        this.setState({ emailSent: true });\n      })\n      // Handle errors here however you like, or use a React error boundary\n      .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n  }\n\n  render() {\n    const { musicParams } = this.state;\n    return (\n      <FullscreenImage image=\"/images/HueWeb.Contact.ShatterMan.jpg\">\n          <NavMenu menuList={this.props.menuList} musicParams={musicParams} />\n          <div className='flex object-center justify-center items-center self-auto w-100 h-100 md:mx-auto'>\n            <div className={this.state.emailSent ? \"invisible mt-2 mb-24 p-8 sm:w-2/3 md:w-1/2\" : \"visibile mt-2 mb-24 p-8 sm:w-2/3 md:w-1/2\"}>\n              <h1 className=\"visible mx-auto w-full text-white font-thin text-center pb-8 tracking-wide md:mt-32\">CONTACT</h1>  \n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder={this.state.formControls.email.placeholder}\n                value={this.state.formControls.email.value} \n                onChange={this.changeHandler} \n                touched={this.state.formControls.email.touched}\n                valid={this.state.formControls.email.valid}  \n              />\n              <Input\n                type=\"text\"\n                name=\"subject\"\n                placeholder={this.state.formControls.subject.placeholder}\n                value={this.state.formControls.subject.value} \n                onChange={this.changeHandler} \n                touched={this.state.formControls.subject.touched}\n                valid={this.state.formControls.subject.valid}  \n              />\n              <h2 className={this.state.emailSent ? 'text-center w-full visible font-sans uppercase bg-transparent mx-auto text-white text-md font-thin' : 'invisible'}>SENT successfully</h2>\n              <Input\n                type=\"text\"\n                name=\"body\"\n                size=\"lg\"\n                placeholder={this.state.formControls.body.placeholder}\n                value={this.state.formControls.body.value} \n                onChange={this.changeHandler} \n                touched={this.state.formControls.body.touched}\n                valid={this.state.formControls.body.valid}  \n              />\n              <button \n                className={this.state.bttnStyle}\n                onClick={this.formSubmitHandler}\n                disabled={!this.state.formIsValid}\n                >\n                SEND\n              </button>\n              <div className=\"visible mt-4 md:flex md:flex-wrap justify-between w-full mx-auto\">\n                <SocialIcon route=\"https://stevenhue.bandcamp.com/releases\" imgSrc='images/bc_icon.png' />\n                <SocialIcon route=\"https://soundcloud.com/steven_hue\" imgSrc='images/sc_icon.png' />\n                <SocialIcon route=\"https://twitter.com/steven_hue\" imgSrc='images/twit_icon.png' />\n              </div>\n          </div>\n        </div>\n      </FullscreenImage>\n    );\n  }\n}\n\nexport default Contact;","import React, { PureComponent } from 'react';\nimport { NavLink } from 'react-router-dom';\n\n\nclass TextButton extends PureComponent {\n    render() {\n        const {  text, route } = this.props;\n        return (\n            <NavLink to={route} className=\"flex-1 no-underline uppercase font-thin\">\n                <div className=\"text-center flex-1 m-4 p-4 bg-transparent hover:bg-white text-white hover:text-grey border focus:outline-none hover:border-transparent rounded\">\n                    {text}\n                </div>\n            </NavLink>\n        )\n    }\n}\n\nexport default TextButton;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Projects from './Projects';\nimport Commissions from './Commissions';\nimport Contact from './Contact';\nimport Home from './Home';\nimport StandardPage from './StandardPage';\nimport EpkPage from './EpkPage';\n\nvar data = require('../data/mockdata.json');\n\nconst App = () => [\n    <Switch>\n        <Route exact path='/' component={() => <Home menuList={data.menu}/>}/>\n        {/* <Route exact path='/projects' component={() => <Projects menuList={data.menu}/>}/>\n        <Route exact path='/projects/fullcode' component={() => <StandardPage inputData={data.fullcode} menuList={data.menu} media={data.fullcode.media}/>}/>\n        <Route exact path='/projects/challengehaus' component={() => <StandardPage inputData={data.challenge_haus} menuList={data.menu} media={data.challenge_haus.media}/>}/>\n        <Route exact path='/projects/assembly' component={() => <StandardPage inputData={data.assembly} menuList={data.menu} media={data.assembly.media}/>}/>\n        <Route exact path='/projects/brainstare.manatorquim' component={() => <StandardPage inputData={data.brainstare_manatorquim} menuList={data.menu} media={data.brainstare_manatorquim.media}/>}/>\n        <Route exact path='/commissions' component={() => <Commissions menuList={data.menu}/>}/>\n        <Route exact path='/commissions/totalinternalreflection' component={() => <StandardPage inputData={data.tir} menuList={data.menu} media={data.tir.media}/>}/>\n        <Route exact path='/commissions/beyondrefuge' component={() => <StandardPage inputData={data.beyond_refuge} menuList={data.menu} media={data.beyond_refuge.media}/>}/>\n        <Route exact path='/commissions/untitleddream' component={() => <StandardPage inputData={data.untitled_dream} menuList={data.menu} media={data.untitled_dream.media}/>}/>\n        <Route exact path='/commissions/returner' component={() => <StandardPage inputData={data.returner} menuList={data.menu} media={data.returner.media}/>}/>\n        <Route exact path='/contact' component={() => <Contact menuList={data.menu}/>}/>\n        <Route exact path='/epk' component={() => <EpkPage inputData={data.epk} menuList={data.menu} media={data.epk.media}/>}/> */}\n    </Switch>\n]\n\nexport default App;\n\n","import React, { Component, Fragment } from 'react';\nimport { FullscreenImage } from '../components/FullscreenImage';\nimport options from \"../containers/MusicPlayerOptions\";\nimport NavMenu from '../components/NavMenu';\nimport ReactPlayer from 'react-player';\n\nclass StandardPage extends Component {\n  state = {\n    params: options\n  };\n  details = this.props.inputData\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n  render() {\n    return (\n      <Fragment>\n        <FullscreenImage image={`../images/${this.details.image}`}>\n        <NavMenu menuList={this.props.menuList} musicParams={options} />\n          <div className=\"ml-5 pt-5 w-1/3 font-sans text-white\">\n            <h1 className=\"flex-wrap mb-5 uppercase tracking-wide font-thin text-5xl\">\n              {this.details.title}\n            </h1>\n            <p className=\"flex-wrap tracking-wide font-hairline md:text-2xl text-sm\">\n              {this.details.subtitle}\n            </p>\n          </div>\n        </FullscreenImage>\n        <div>\n          <h1 className=\"text-center font-sans font-thin mt-6\">\n            {this.details.title}\n          </h1>\n        </div>\n        <div className=\"text-justify font-thin bg-white md:flex md:flex-wrap p-8 md:px-20 md:mx-32 whitespace-pre-wrap\">\n            {this.details.copy} \n        </div>\n        <div className=\"md:flex justify-center md:mx-32 mx-12 mb-24 mt-16\">\n          <ul className=\"md:flex p-0\">\n            {this.props.media.map(item => (\n              <li key={item.id} className=\"flex\">\n                <ReactPlayer url={item.url} className=\"yarnlist-none p-2\"/> \n              </li>\n            ))}\n          </ul>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default StandardPage;\n","import React, { Component, Fragment } from 'react';\nimport { EpkFullscreenImage } from '../components/FullscreenImage';\nimport options from \"../containers/MusicPlayerOptions\";\nimport ReactPlayer from 'react-player';\nimport SocialIcon from '../components/SocialIcon';\n\nclass EpkPage extends Component {\n  state = {\n    params: options\n  };\n  details = this.props.inputData\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n  render() {\n    return (\n      <Fragment>\n        <EpkFullscreenImage className=\"h-auto\" image={`../images/${this.details.image}`}>\n          <div className=\"md:text-justify text-white pt-12 font-hairline md:flex md:flex-wrap justify-center md:px-20 md:mx-32 mx-12 whitespace-pre-wrap\">\n            <h1 className=\"flex-wrap mb-5 uppercase md:tracking-wide font-thin text-4xl\">\n              {this.details.title}\n            </h1>\n          </div>\n          <div className=\"md:flex justify-center md:mx-32 mx-12 mt-4 pt-4\">\n            {this.props.media.map(item => (\n              <li key={item.id} className=\"flex\">\n                <ReactPlayer url={item.url} className=\"yarnlist-none\"/> \n              </li>\n            ))}\n          </div>\n          <div className=\"text-center text-lg justify-center whitespace-pre-line text-white font-thin pt-8 pb-20 md:flex md:flex-wrap md:mx-32 mx-12\">\n          <div className=\"pt-8\">\n          <p>Steven Hue is most at home in the body of the mind. Hue creates atmospheric soundscapes with a rich blend of electronic sounds and acoustic instrumentation. His evocative vocals stir memories from beyond the edge of conscious reason.</p>\n          <br/><br/>\n          <p> Tapping a rich vein of influences with the tenacity of a musical junkie, Hue fuses ambient soundscapes, experimental rock, and electronica with seamless and satisfying originality.</p>\n          <br/><br/>\n          <p>Hailing from Aotearoa (New Zealand), Hue studied at the Nelson School of Music and is currently based in Tasmania. As vocalist and co-writer for experimental Kiwi band <a href=\"https://www.stevenhue.com/projects/fullcode\">Full Code</a>, Hue experienced the rush of performing live for a highly appreciative fan base. Full Code released a self titled EP in 2009, and full-length album, Telescapes in 2014.</p>\n          <br/><br/>\n          <p>Since 2015, Hue has been intensively developing his expertise in music production and sound design, which has led to commissions for prestigious art installations, short films and games.</p>\n          <br/><br/>\n          <p> In late 2021, Steven Hue made his solo debut with two releases that flaunt his transition from band frontman to solo electronic artist.</p>\n          </div>\n        </div>\n        <div className=\"content-center mt-2 pb-20 flex items-center justify-center flex-wrap md:mx-32\">\n                <SocialIcon route=\"https://www.instagram.com/stevenhue.music/\" imgSrc='images/INSTA.png' />\n                <SocialIcon route=\"https://twitter.com/steven_hue\" imgSrc='images/twit_icon.png' />\n              </div>\n        </EpkFullscreenImage>\n      </Fragment>\n    );\n  }\n}\n\nexport default EpkPage;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport './css/tailwind.css'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render((\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    ),\n        document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}